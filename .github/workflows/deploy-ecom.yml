name: Build and Deploy

run-name: ${{ github.actor }} has pushed changes to ${{ github.event.ref }}

on:
    push:
        branches:
            - main

    pull_request: 
      branches:
      - 'release/ecom/*'
      types: [opened,reopened,synchronize]

jobs:
    ecom_build_docker_images:
        runs-on: ubuntu-latest

        defaults:
            run:
              working-directory:  ./learning-app-ecommerce

        steps:
          - name: Checkout code ✅
            uses: actions/checkout@v4

          - name: Set up Docker Buildx 🛠️ 
            uses: docker/setup-buildx-action@v1
    
          - name: Log in to Docker Hub 🔑
            uses: docker/login-action@v1
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PAT }}
    
          - name: Build and push Docker image for webapp 🐳
            run: | 
              docker build -t ${{ secrets.DOCKER_USERNAME }}/ecom-web:latest -f ./Dockerfile.app .
              docker push ${{ secrets.DOCKER_USERNAME }}/ecom-web:latest
              

          - name: Build and push Docker image for mariadb 🐳
            run: | 
              docker build -t ${{ secrets.DOCKER_USERNAME }}/ecom-web:latest -f ./Dockerfile.db .
              docker push ${{ secrets.DOCKER_USERNAME }}/ecom-web:latest

    ecom_webapp_deploy:
        runs-on: ubuntu-latest
        needs: ecom_build_docker_images

        permissions:
          id-token: write
          contents: read

        steps:
          - name: Checkout code ✅
            uses: actions/checkout@v3
    
          - name: Set up Kubectl CLI 🔧
            uses: azure/setup-kubectl@v1
            with:
              version: 'latest'

          - name: Authenticate with Azure
            uses: azure/login@v1
            with:
              client-id: ${{ secrets.AZURE_CLIENT_ID }}
              tenant-id: ${{ secrets.AZURE_TENANT_ID }}
              subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
              allow-no-subscriptions: true

          - name: Set up AKS context
            run: |
              az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
    
          - name: Set up Helm 🔧
            uses: azure/setup-helm@v1
            with:
              version: 'latest'
    
          - name: Deploy to Kubernetes 
            run: |
              helm upgrade --install ecom-web ./ecom-web-chart/ \
                --set image.repository=${{ secrets.DOCKER_USERNAME }}/ecom-web \
                --set image.tag=latest
    
    akrc_codeql_scan:
        runs-on: ubuntu-latest
        needs: ecom_webapp_deploy

        steps:
        - name: Checkout ☑️
          uses: actions/checkout@v4

        - name: Initialize CodeQL 🔄
          uses: github/codeql-action/init@v3
          with:
            languages: javascript

        - name: Perform CodeQL Analysis 🔎
          uses: github/codeql-action/analyze@v3
          with:
            category: "language:php,
                        language:html,
                        language:yaml"        