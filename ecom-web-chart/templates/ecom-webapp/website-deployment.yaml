apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.website.deploymentName }}
spec:
  strategy:
    type: {{ .Values.website.type }}
    rollingUpdate:
      maxSurge: {{ .Values.website.maxSurge }}
      maxUnavailable: {{ .Values.website.maxUnavailable}}
  replicas: {{ .Values.website.replicaCount }}
  selector:
    matchLabels:
      app: ecomWebapp
  template:
    metadata:
      labels:
        app: ecomWebapp  
    spec:
      containers:
        - name: {{ .Values.website.containerName }}
          image: "{{ .Values.website.repository }}:{{ .Values.website.tag }}"
          imagePullPolicy: {{ .Values.website.pullPolicy }}
          resources:
            limits:
              memory: {{ .Values.website.limits.memory }}
              cpu: {{ .Values.website.limits.cpu}}
            requests:
              memory: {{ .Values.website.requests.memory}}
              cpu: {{ .Values.website.requests.cpu }}
          ports:
            - containerPort: {{ .Values.website.containerPort }}
          livenessProbe:
            httpGet:
              path: {{ .Values.website.livenessProbe.path }}
              port: {{ .Values.website.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.website.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.website.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.website.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.website.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.website.readinessProbe.path }}
              port: {{ .Values.website.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.website.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.website.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.website.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.website.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.website.readinessProbe.failureThreshold }}
          env:
          - name: dbHost
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.website.configMap.metadataName }}
                key: "dbHost"
          - name: dbUser
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.website.configMap.metadataName }}
                key: "dbUser"
          - name: dbPassword
            valueFrom:
              secretKeyRef:
                name: {{ .Values.website.secret.dbSecrets.name }}
                key: "dbPassword"
          - name: dbName
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.website.configMap.metadataName }}
                key: "dbName"
          - name: featureDarkMode
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.website.configMap.metadataName }}
                key: "featureDarkMode"