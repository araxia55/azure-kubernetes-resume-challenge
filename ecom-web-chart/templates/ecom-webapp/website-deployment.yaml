apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: ecomWebapp
  template:
    metadata:
      labels:
        app: ecomWebapp  
    spec:
      containers:
        - name: {{ .Values.containers.name}}
          image: "{{ .Values.containers.image.repository }}:{{ .Values.containers.image.tag }}"
          imagePullPolicy: {{ .Values.containers.image.pullPolicy }}
          resources:
            limits:
              memory: {{ .Values.containers.image.resources.limits.memory }}
              cpu: {{ .Values.containers.image.resources.limits.cpu}}
            requests:
              memory: {{ .Values.containers.image.resources.requests.memory }}
              cpu: {{ .Values.containers.image.resources.requests.cpu }}
          ports:
            - containerPort: {{ .Values.containers.image.ports.containerPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.containers.image.livenessProbe.httpGet.port }}
            httpGet:
              path: {{ .Values.containers.image.livenessProbe.httpGet.path }}
              port: {{ .Values.containers.image.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.containers.image.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.containers.image.periodSeconds }}
            timeoutSeconds: {{ .Values.containers.image.timeoutSeconds }}
            failureThreshold: {{ .Values.containers.image.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.image.readinessProbe.httpGet.path }}
              port: {{ .Values.containers.image.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.containers.image.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.image.periodSeconds }}
            timeoutSeconds: {{ .Values.containers.image.timeoutSeconds }}
            successThreshold: {{ .Values.containers.image.successThreshold }}
            failureThreshold: {{ .Values.containers.image.failureThreshold }}
          env:
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configmap.metadata.name }}
                key: {{ .Values.configmap.websiteConfigmap.data.DB_HOST}}
          - name: DB_USER
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configmap.metadata.name }}
                key: {{ .Values.configmap.websiteConfigmap.data.DB_USER}}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.dbSecrets.metadata.name }}
                key: {{ .Values.secret.dbSecrets.DB_PASSWORD }}
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configmap.metadata.name }}
                key: {{ .Values.configmap.websiteConfigmap.data.DB_NAME }}
          - name: FEATURE_DARK_MODE
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configmap.featureToggleConfig.metadata.name }}
                key: {{ .Values.configmap.featureToggleConfig.data.FEATURE_DARK_MODE}}  